/*
* generated by Xtext
*/
grammar InternalRust;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.redoxi.ruste.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.redoxi.ruste.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.redoxi.ruste.services.RustGrammarAccess;

}

@parser::members {
 
 	private RustGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RustGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCrate
entryRuleCrate 
:
{ before(grammarAccess.getCrateRule()); }
	 ruleCrate
{ after(grammarAccess.getCrateRule()); } 
	 EOF 
;

// Rule Crate
ruleCrate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCrateAccess().getItemsAssignment()); }
(rule__Crate__ItemsAssignment)*
{ after(grammarAccess.getCrateAccess().getItemsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItemAttr
entryRuleItemAttr 
:
{ before(grammarAccess.getItemAttrRule()); }
	 ruleItemAttr
{ after(grammarAccess.getItemAttrRule()); } 
	 EOF 
;

// Rule ItemAttr
ruleItemAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemAttrAccess().getGroup()); }
(rule__ItemAttr__Group__0)
{ after(grammarAccess.getItemAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttr
entryRuleAttr 
:
{ before(grammarAccess.getAttrRule()); }
	 ruleAttr
{ after(grammarAccess.getAttrRule()); } 
	 EOF 
;

// Rule Attr
ruleAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrAccess().getAlternatives()); }
(rule__Attr__Alternatives)
{ after(grammarAccess.getAttrAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrWithList
entryRuleAttrWithList 
:
{ before(grammarAccess.getAttrWithListRule()); }
	 ruleAttrWithList
{ after(grammarAccess.getAttrWithListRule()); } 
	 EOF 
;

// Rule AttrWithList
ruleAttrWithList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrWithListAccess().getGroup()); }
(rule__AttrWithList__Group__0)
{ after(grammarAccess.getAttrWithListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralAttr
entryRuleLiteralAttr 
:
{ before(grammarAccess.getLiteralAttrRule()); }
	 ruleLiteralAttr
{ after(grammarAccess.getLiteralAttrRule()); } 
	 EOF 
;

// Rule LiteralAttr
ruleLiteralAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAttrAccess().getGroup()); }
(rule__LiteralAttr__Group__0)
{ after(grammarAccess.getLiteralAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItemAndAttrs
entryRuleItemAndAttrs 
:
{ before(grammarAccess.getItemAndAttrsRule()); }
	 ruleItemAndAttrs
{ after(grammarAccess.getItemAndAttrsRule()); } 
	 EOF 
;

// Rule ItemAndAttrs
ruleItemAndAttrs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemAndAttrsAccess().getGroup()); }
(rule__ItemAndAttrs__Group__0)
{ after(grammarAccess.getItemAndAttrsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItem
entryRuleItem 
:
{ before(grammarAccess.getItemRule()); }
	 ruleItem
{ after(grammarAccess.getItemRule()); } 
	 EOF 
;

// Rule Item
ruleItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemAccess().getAlternatives()); }
(rule__Item__Alternatives)
{ after(grammarAccess.getItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModItem
entryRuleModItem 
:
{ before(grammarAccess.getModItemRule()); }
	 ruleModItem
{ after(grammarAccess.getModItemRule()); } 
	 EOF 
;

// Rule ModItem
ruleModItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModItemAccess().getGroup()); }
(rule__ModItem__Group__0)
{ after(grammarAccess.getModItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnItem
entryRuleFnItem 
:
{ before(grammarAccess.getFnItemRule()); }
	 ruleFnItem
{ after(grammarAccess.getFnItemRule()); } 
	 EOF 
;

// Rule FnItem
ruleFnItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFnItemAccess().getGroup()); }
(rule__FnItem__Group__0)
{ after(grammarAccess.getFnItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericParamDecl
entryRuleGenericParamDecl 
:
{ before(grammarAccess.getGenericParamDeclRule()); }
	 ruleGenericParamDecl
{ after(grammarAccess.getGenericParamDeclRule()); } 
	 EOF 
;

// Rule GenericParamDecl
ruleGenericParamDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericParamDeclAccess().getGroup()); }
(rule__GenericParamDecl__Group__0)
{ after(grammarAccess.getGenericParamDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArg
entryRuleArg 
:
{ before(grammarAccess.getArgRule()); }
	 ruleArg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule Arg
ruleArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgAccess().getGroup()); }
(rule__Arg__Group__0)
{ after(grammarAccess.getArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePat
entryRulePat 
:
{ before(grammarAccess.getPatRule()); }
	 rulePat
{ after(grammarAccess.getPatRule()); } 
	 EOF 
;

// Rule Pat
rulePat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatAccess().getIdentAssignment()); }
(rule__Pat__IdentAssignment)
{ after(grammarAccess.getPatAccess().getIdentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleType
entryRuleTupleType 
:
{ before(grammarAccess.getTupleTypeRule()); }
	 ruleTupleType
{ after(grammarAccess.getTupleTypeRule()); } 
	 EOF 
;

// Rule TupleType
ruleTupleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleTypeAccess().getGroup()); }
(rule__TupleType__Group__0)
{ after(grammarAccess.getTupleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructType
entryRuleStructType 
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeAccess().getGroup()); }
(rule__StructType__Group__0)
{ after(grammarAccess.getStructTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoxedType
entryRuleBoxedType 
:
{ before(grammarAccess.getBoxedTypeRule()); }
	 ruleBoxedType
{ after(grammarAccess.getBoxedTypeRule()); } 
	 EOF 
;

// Rule BoxedType
ruleBoxedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoxedTypeAccess().getGroup()); }
(rule__BoxedType__Group__0)
{ after(grammarAccess.getBoxedTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOwnedType
entryRuleOwnedType 
:
{ before(grammarAccess.getOwnedTypeRule()); }
	 ruleOwnedType
{ after(grammarAccess.getOwnedTypeRule()); } 
	 EOF 
;

// Rule OwnedType
ruleOwnedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOwnedTypeAccess().getGroup()); }
(rule__OwnedType__Group__0)
{ after(grammarAccess.getOwnedTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBorrowedType
entryRuleBorrowedType 
:
{ before(grammarAccess.getBorrowedTypeRule()); }
	 ruleBorrowedType
{ after(grammarAccess.getBorrowedTypeRule()); } 
	 EOF 
;

// Rule BorrowedType
ruleBorrowedType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBorrowedTypeAccess().getGroup()); }
(rule__BorrowedType__Group__0)
{ after(grammarAccess.getBorrowedTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructField
entryRuleStructField 
:
{ before(grammarAccess.getStructFieldRule()); }
	 ruleStructField
{ after(grammarAccess.getStructFieldRule()); } 
	 EOF 
;

// Rule StructField
ruleStructField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructFieldAccess().getGroup()); }
(rule__StructField__Group__0)
{ after(grammarAccess.getStructFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumType
entryRuleEnumType 
:
{ before(grammarAccess.getEnumTypeRule()); }
	 ruleEnumType
{ after(grammarAccess.getEnumTypeRule()); } 
	 EOF 
;

// Rule EnumType
ruleEnumType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup()); }
(rule__EnumType__Group__0)
{ after(grammarAccess.getEnumTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariant
entryRuleVariant 
:
{ before(grammarAccess.getVariantRule()); }
	 ruleVariant
{ after(grammarAccess.getVariantRule()); } 
	 EOF 
;

// Rule Variant
ruleVariant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariantAccess().getAlternatives()); }
(rule__Variant__Alternatives)
{ after(grammarAccess.getVariantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructVariant
entryRuleStructVariant 
:
{ before(grammarAccess.getStructVariantRule()); }
	 ruleStructVariant
{ after(grammarAccess.getStructVariantRule()); } 
	 EOF 
;

// Rule StructVariant
ruleStructVariant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructVariantAccess().getGroup()); }
(rule__StructVariant__Group__0)
{ after(grammarAccess.getStructVariantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTupleVariant
entryRuleTupleVariant 
:
{ before(grammarAccess.getTupleVariantRule()); }
	 ruleTupleVariant
{ after(grammarAccess.getTupleVariantRule()); } 
	 EOF 
;

// Rule TupleVariant
ruleTupleVariant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleVariantAccess().getGroup()); }
(rule__TupleVariant__Group__0)
{ after(grammarAccess.getTupleVariantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitVariant
entryRuleUnitVariant 
:
{ before(grammarAccess.getUnitVariantRule()); }
	 ruleUnitVariant
{ after(grammarAccess.getUnitVariantRule()); } 
	 EOF 
;

// Rule UnitVariant
ruleUnitVariant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitVariantAccess().getIdentAssignment()); }
(rule__UnitVariant__IdentAssignment)
{ after(grammarAccess.getUnitVariantAccess().getIdentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLit
entryRuleStringLit 
:
{ before(grammarAccess.getStringLitRule()); }
	 ruleStringLit
{ after(grammarAccess.getStringLitRule()); } 
	 EOF 
;

// Rule StringLit
ruleStringLit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLitAccess().getValueAssignment()); }
(rule__StringLit__ValueAssignment)
{ after(grammarAccess.getStringLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLit
entryRuleNumberLit 
:
{ before(grammarAccess.getNumberLitRule()); }
	 ruleNumberLit
{ after(grammarAccess.getNumberLitRule()); } 
	 EOF 
;

// Rule NumberLit
ruleNumberLit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLitAccess().getValueAssignment()); }
(rule__NumberLit__ValueAssignment)
{ after(grammarAccess.getNumberLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharLit
entryRuleCharLit 
:
{ before(grammarAccess.getCharLitRule()); }
	 ruleCharLit
{ after(grammarAccess.getCharLitRule()); } 
	 EOF 
;

// Rule CharLit
ruleCharLit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharLitAccess().getValueAssignment()); }
(rule__CharLit__ValueAssignment)
{ after(grammarAccess.getCharLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Attr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getLiteralAttrParserRuleCall_0()); }
	ruleLiteralAttr
{ after(grammarAccess.getAttrAccess().getLiteralAttrParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttrAccess().getAttrWithListParserRuleCall_1()); }
	ruleAttrWithList
{ after(grammarAccess.getAttrAccess().getAttrWithListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Item__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAccess().getModItemParserRuleCall_0()); }
	ruleModItem
{ after(grammarAccess.getItemAccess().getModItemParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getItemAccess().getFnItemParserRuleCall_1()); }
	ruleFnItem
{ after(grammarAccess.getItemAccess().getFnItemParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getExternalBodyAssignment_2_0()); }
(rule__ModItem__ExternalBodyAssignment_2_0)
{ after(grammarAccess.getModItemAccess().getExternalBodyAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getModItemAccess().getGroup_2_1()); }
(rule__ModItem__Group_2_1__0)
{ after(grammarAccess.getModItemAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
	rulePrimitiveType
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTupleTypeParserRuleCall_1()); }
	ruleTupleType
{ after(grammarAccess.getTypeAccess().getTupleTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_2()); }
	ruleStructType
{ after(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEnumTypeParserRuleCall_3()); }
	ruleEnumType
{ after(grammarAccess.getTypeAccess().getEnumTypeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBoxedTypeParserRuleCall_4()); }
	ruleBoxedType
{ after(grammarAccess.getTypeAccess().getBoxedTypeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getOwnedTypeParserRuleCall_5()); }
	ruleOwnedType
{ after(grammarAccess.getTypeAccess().getOwnedTypeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBorrowedTypeParserRuleCall_6()); }
	ruleBorrowedType
{ after(grammarAccess.getTypeAccess().getBorrowedTypeParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
(rule__PrimitiveType__Group_0__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
(rule__PrimitiveType__Group_1__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
(rule__PrimitiveType__Group_2__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
(rule__PrimitiveType__Group_3__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
(rule__PrimitiveType__Group_4__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getStructVariantParserRuleCall_0()); }
	ruleStructVariant
{ after(grammarAccess.getVariantAccess().getStructVariantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariantAccess().getTupleVariantParserRuleCall_1()); }
	ruleTupleVariant
{ after(grammarAccess.getVariantAccess().getTupleVariantParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVariantAccess().getUnitVariantParserRuleCall_2()); }
	ruleUnitVariant
{ after(grammarAccess.getVariantAccess().getUnitVariantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNumberLitParserRuleCall_0()); }
	ruleNumberLit
{ after(grammarAccess.getLiteralAccess().getNumberLitParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCharLitParserRuleCall_1()); }
	ruleCharLit
{ after(grammarAccess.getLiteralAccess().getCharLitParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLitParserRuleCall_2()); }
	ruleStringLit
{ after(grammarAccess.getLiteralAccess().getStringLitParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLit__ValueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLitAccess().getValueFLOAT_LITTerminalRuleCall_0_0()); }
	RULE_FLOAT_LIT
{ after(grammarAccess.getNumberLitAccess().getValueFLOAT_LITTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getNumberLitAccess().getValueINT_LITTerminalRuleCall_0_1()); }
	RULE_INT_LIT
{ after(grammarAccess.getNumberLitAccess().getValueINT_LITTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_0()); }
(	'priv' 
)
{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); }
(	'pub' 
)
{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ItemAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group__0__Impl
	rule__ItemAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getNumberSignLeftSquareBracketKeyword_0()); }

	'#[' 

{ after(grammarAccess.getItemAttrAccess().getNumberSignLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group__1__Impl
	rule__ItemAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getAttrsAssignment_1()); }
(rule__ItemAttr__AttrsAssignment_1)
{ after(grammarAccess.getItemAttrAccess().getAttrsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group__2__Impl
	rule__ItemAttr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getGroup_2()); }
(rule__ItemAttr__Group_2__0)*
{ after(grammarAccess.getItemAttrAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemAttr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getItemAttrAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ItemAttr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group_2__0__Impl
	rule__ItemAttr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getItemAttrAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemAttr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAttr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getAttrsAssignment_2_1()); }
(rule__ItemAttr__AttrsAssignment_2_1)
{ after(grammarAccess.getItemAttrAccess().getAttrsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrWithList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group__0__Impl
	rule__AttrWithList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getIdentAssignment_0()); }
(rule__AttrWithList__IdentAssignment_0)
{ after(grammarAccess.getAttrWithListAccess().getIdentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrWithList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group__1__Impl
	rule__AttrWithList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAttrWithListAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrWithList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group__2__Impl
	rule__AttrWithList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getAttrsAssignment_2()); }
(rule__AttrWithList__AttrsAssignment_2)
{ after(grammarAccess.getAttrWithListAccess().getAttrsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrWithList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group__3__Impl
	rule__AttrWithList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getGroup_3()); }
(rule__AttrWithList__Group_3__0)*
{ after(grammarAccess.getAttrWithListAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrWithList__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAttrWithListAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AttrWithList__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group_3__0__Impl
	rule__AttrWithList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAttrWithListAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrWithList__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrWithList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getAttrsAssignment_3_1()); }
(rule__AttrWithList__AttrsAssignment_3_1)
{ after(grammarAccess.getAttrWithListAccess().getAttrsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralAttr__Group__0__Impl
	rule__LiteralAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAttrAccess().getIdentAssignment_0()); }
(rule__LiteralAttr__IdentAssignment_0)
{ after(grammarAccess.getLiteralAttrAccess().getIdentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralAttr__Group__1__Impl
	rule__LiteralAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAttrAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLiteralAttrAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralAttr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAttrAccess().getValueAssignment_2()); }
(rule__LiteralAttr__ValueAssignment_2)
{ after(grammarAccess.getLiteralAttrAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ItemAndAttrs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAndAttrs__Group__0__Impl
	rule__ItemAndAttrs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAndAttrs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAndAttrsAccess().getAttrsAssignment_0()); }
(rule__ItemAndAttrs__AttrsAssignment_0)*
{ after(grammarAccess.getItemAndAttrsAccess().getAttrsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemAndAttrs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemAndAttrs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAndAttrs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAndAttrsAccess().getItemAssignment_1()); }
(rule__ItemAndAttrs__ItemAssignment_1)
{ after(grammarAccess.getItemAndAttrsAccess().getItemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group__0__Impl
	rule__ModItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getModKeyword_0()); }

	'mod' 

{ after(grammarAccess.getModItemAccess().getModKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group__1__Impl
	rule__ModItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getIdentAssignment_1()); }
(rule__ModItem__IdentAssignment_1)
{ after(grammarAccess.getModItemAccess().getIdentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getAlternatives_2()); }
(rule__ModItem__Alternatives_2)
{ after(grammarAccess.getModItemAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModItem__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group_2_1__0__Impl
	rule__ModItem__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getModItemAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModItem__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group_2_1__1__Impl
	rule__ModItem__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getItemsAssignment_2_1_1()); }
(rule__ModItem__ItemsAssignment_2_1_1)*
{ after(grammarAccess.getModItemAccess().getItemsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModItem__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModItem__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getModItemAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FnItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__0__Impl
	rule__FnItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getFnKeyword_0()); }

	'fn' 

{ after(grammarAccess.getFnItemAccess().getFnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__1__Impl
	rule__FnItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getIdentAssignment_1()); }
(rule__FnItem__IdentAssignment_1)
{ after(grammarAccess.getFnItemAccess().getIdentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__2__Impl
	rule__FnItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGroup_2()); }
(rule__FnItem__Group_2__0)?
{ after(grammarAccess.getFnItemAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__3__Impl
	rule__FnItem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getFnItemAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__4__Impl
	rule__FnItem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGroup_4()); }
(rule__FnItem__Group_4__0)?
{ after(grammarAccess.getFnItemAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__5__Impl
	rule__FnItem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFnItemAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__6__Impl
	rule__FnItem__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGroup_6()); }
(rule__FnItem__Group_6__0)?
{ after(grammarAccess.getFnItemAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getBodyAssignment_7()); }
(rule__FnItem__BodyAssignment_7)
{ after(grammarAccess.getFnItemAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FnItem__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2__0__Impl
	rule__FnItem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getFnItemAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2__1__Impl
	rule__FnItem__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getParamsAssignment_2_1()); }
(rule__FnItem__ParamsAssignment_2_1)
{ after(grammarAccess.getFnItemAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2__2__Impl
	rule__FnItem__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGroup_2_2()); }
(rule__FnItem__Group_2_2__0)*
{ after(grammarAccess.getFnItemAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getFnItemAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FnItem__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2_2__0__Impl
	rule__FnItem__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getFnItemAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getParamsAssignment_2_2_1()); }
(rule__FnItem__ParamsAssignment_2_2_1)
{ after(grammarAccess.getFnItemAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnItem__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_4__0__Impl
	rule__FnItem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getArgsAssignment_4_0()); }
(rule__FnItem__ArgsAssignment_4_0)
{ after(grammarAccess.getFnItemAccess().getArgsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getGroup_4_1()); }
(rule__FnItem__Group_4_1__0)*
{ after(grammarAccess.getFnItemAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnItem__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_4_1__0__Impl
	rule__FnItem__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getFnItemAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getArgsAssignment_4_1_1()); }
(rule__FnItem__ArgsAssignment_4_1_1)
{ after(grammarAccess.getFnItemAccess().getArgsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnItem__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_6__0__Impl
	rule__FnItem__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getHyphenMinusGreaterThanSignKeyword_6_0()); }

	'->' 

{ after(grammarAccess.getFnItemAccess().getHyphenMinusGreaterThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnItem__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnItem__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getReturnTypeAssignment_6_1()); }
(rule__FnItem__ReturnTypeAssignment_6_1)
{ after(grammarAccess.getFnItemAccess().getReturnTypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_1()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericParamDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group__0__Impl
	rule__GenericParamDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getIdentAssignment_0()); }
(rule__GenericParamDecl__IdentAssignment_0)
{ after(grammarAccess.getGenericParamDeclAccess().getIdentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericParamDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getGroup_1()); }
(rule__GenericParamDecl__Group_1__0)?
{ after(grammarAccess.getGenericParamDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericParamDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group_1__0__Impl
	rule__GenericParamDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getGenericParamDeclAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericParamDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group_1__1__Impl
	rule__GenericParamDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getBoundsAssignment_1_1()); }
(rule__GenericParamDecl__BoundsAssignment_1_1)
{ after(grammarAccess.getGenericParamDeclAccess().getBoundsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericParamDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getGroup_1_2()); }
(rule__GenericParamDecl__Group_1_2__0)
{ after(grammarAccess.getGenericParamDeclAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GenericParamDecl__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group_1_2__0__Impl
	rule__GenericParamDecl__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getPlusSignKeyword_1_2_0()); }

	'+' 

{ after(grammarAccess.getGenericParamDeclAccess().getPlusSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericParamDecl__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericParamDecl__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getBoundsAssignment_1_2_1()); }
(rule__GenericParamDecl__BoundsAssignment_1_2_1)
{ after(grammarAccess.getGenericParamDeclAccess().getBoundsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__0__Impl
	rule__Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getPatAssignment_0()); }
(rule__Arg__PatAssignment_0)
{ after(grammarAccess.getArgAccess().getPatAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__1__Impl
	rule__Arg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getArgAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeAssignment_2()); }
(rule__Arg__TypeAssignment_2)
{ after(grammarAccess.getArgAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimitiveType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_0__0__Impl
	rule__PrimitiveType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getIntTypeAction_0_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getIntTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getINT_TYPETerminalRuleCall_0_1()); }
	RULE_INT_TYPE
{ after(grammarAccess.getPrimitiveTypeAccess().getINT_TYPETerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_1__0__Impl
	rule__PrimitiveType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getFloatTypeAction_1_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getFloatTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getFLOAT_TYPETerminalRuleCall_1_1()); }
	RULE_FLOAT_TYPE
{ after(grammarAccess.getPrimitiveTypeAccess().getFLOAT_TYPETerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__0__Impl
	rule__PrimitiveType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getBoolTypeAction_2_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getBoolTypeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEAN_TYPETerminalRuleCall_2_1()); }
	RULE_BOOLEAN_TYPE
{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEAN_TYPETerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__0__Impl
	rule__PrimitiveType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getMachineTypeAction_3_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getMachineTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getMACHINE_TYPETerminalRuleCall_3_1()); }
	RULE_MACHINE_TYPE
{ after(grammarAccess.getPrimitiveTypeAccess().getMACHINE_TYPETerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_4__0__Impl
	rule__PrimitiveType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getUnitTypeAction_4_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getUnitTypeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getUNIT_TYPETerminalRuleCall_4_1()); }
	RULE_UNIT_TYPE
{ after(grammarAccess.getPrimitiveTypeAccess().getUNIT_TYPETerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__0__Impl
	rule__TupleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__1__Impl
	rule__TupleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); }
(rule__TupleType__TypesAssignment_1)
{ after(grammarAccess.getTupleTypeAccess().getTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__2__Impl
	rule__TupleType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getGroup_2()); }
(rule__TupleType__Group_2__0)*
{ after(grammarAccess.getTupleTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TupleType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group_2__0__Impl
	rule__TupleType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); }
(rule__TupleType__TypesAssignment_2_1)
{ after(grammarAccess.getTupleTypeAccess().getTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__0__Impl
	rule__StructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructTypeAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__1__Impl
	rule__StructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIdentAssignment_1()); }
(rule__StructType__IdentAssignment_1)
{ after(grammarAccess.getStructTypeAccess().getIdentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__2__Impl
	rule__StructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_2()); }
(rule__StructType__Group_2__0)?
{ after(grammarAccess.getStructTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__3__Impl
	rule__StructType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__4__Impl
	rule__StructType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getFieldsAssignment_4()); }
(rule__StructType__FieldsAssignment_4)
{ after(grammarAccess.getStructTypeAccess().getFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__5__Impl
	rule__StructType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_5()); }
(rule__StructType__Group_5__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StructType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__0__Impl
	rule__StructType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__1__Impl
	rule__StructType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getParamsAssignment_2_1()); }
(rule__StructType__ParamsAssignment_2_1)
{ after(grammarAccess.getStructTypeAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__2__Impl
	rule__StructType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_2_2()); }
(rule__StructType__Group_2_2__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2_2__0__Impl
	rule__StructType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getParamsAssignment_2_2_1()); }
(rule__StructType__ParamsAssignment_2_2_1)
{ after(grammarAccess.getStructTypeAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_5__0__Impl
	rule__StructType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getFieldsAssignment_5_1()); }
(rule__StructType__FieldsAssignment_5_1)
{ after(grammarAccess.getStructTypeAccess().getFieldsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BoxedType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoxedType__Group__0__Impl
	rule__BoxedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoxedType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxedTypeAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getBoxedTypeAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoxedType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoxedType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoxedType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxedTypeAccess().getTypeAssignment_1()); }
(rule__BoxedType__TypeAssignment_1)
{ after(grammarAccess.getBoxedTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OwnedType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OwnedType__Group__0__Impl
	rule__OwnedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOwnedTypeAccess().getTildeKeyword_0()); }

	'~' 

{ after(grammarAccess.getOwnedTypeAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OwnedType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OwnedType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOwnedTypeAccess().getTypeAssignment_1()); }
(rule__OwnedType__TypeAssignment_1)
{ after(grammarAccess.getOwnedTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BorrowedType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BorrowedType__Group__0__Impl
	rule__BorrowedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BorrowedType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBorrowedTypeAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getBorrowedTypeAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BorrowedType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BorrowedType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BorrowedType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBorrowedTypeAccess().getTypeAssignment_1()); }
(rule__BorrowedType__TypeAssignment_1)
{ after(grammarAccess.getBorrowedTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructField__Group__0__Impl
	rule__StructField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getVisAssignment_0()); }
(rule__StructField__VisAssignment_0)?
{ after(grammarAccess.getStructFieldAccess().getVisAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructField__Group__1__Impl
	rule__StructField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getIdentAssignment_1()); }
(rule__StructField__IdentAssignment_1)
{ after(grammarAccess.getStructFieldAccess().getIdentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructField__Group__2__Impl
	rule__StructField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getStructFieldAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getTypeAssignment_3()); }
(rule__StructField__TypeAssignment_3)
{ after(grammarAccess.getStructFieldAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__0__Impl
	rule__EnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__1__Impl
	rule__EnumType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getIdentAssignment_1()); }
(rule__EnumType__IdentAssignment_1)
{ after(grammarAccess.getEnumTypeAccess().getIdentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__2__Impl
	rule__EnumType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup_2()); }
(rule__EnumType__Group_2__0)?
{ after(grammarAccess.getEnumTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__3__Impl
	rule__EnumType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__4__Impl
	rule__EnumType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getVariantsAssignment_4()); }
(rule__EnumType__VariantsAssignment_4)
{ after(grammarAccess.getEnumTypeAccess().getVariantsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__5__Impl
	rule__EnumType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup_5()); }
(rule__EnumType__Group_5__0)*
{ after(grammarAccess.getEnumTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EnumType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2__0__Impl
	rule__EnumType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getEnumTypeAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2__1__Impl
	rule__EnumType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getParamsAssignment_2_1()); }
(rule__EnumType__ParamsAssignment_2_1)
{ after(grammarAccess.getEnumTypeAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2__2__Impl
	rule__EnumType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup_2_2()); }
(rule__EnumType__Group_2_2__0)*
{ after(grammarAccess.getEnumTypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getEnumTypeAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2_2__0__Impl
	rule__EnumType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getEnumTypeAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getParamsAssignment_2_2_1()); }
(rule__EnumType__ParamsAssignment_2_2_1)
{ after(grammarAccess.getEnumTypeAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_5__0__Impl
	rule__EnumType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getEnumTypeAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getVariantsAssignment_5_1()); }
(rule__EnumType__VariantsAssignment_5_1)
{ after(grammarAccess.getEnumTypeAccess().getVariantsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructVariant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__0__Impl
	rule__StructVariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getIdentAssignment_0()); }
(rule__StructVariant__IdentAssignment_0)
{ after(grammarAccess.getStructVariantAccess().getIdentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__1__Impl
	rule__StructVariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getGroup_1()); }
(rule__StructVariant__Group_1__0)?
{ after(grammarAccess.getStructVariantAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__2__Impl
	rule__StructVariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStructVariantAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__3__Impl
	rule__StructVariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getFieldsAssignment_3()); }
(rule__StructVariant__FieldsAssignment_3)
{ after(grammarAccess.getStructVariantAccess().getFieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__4__Impl
	rule__StructVariant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getGroup_4()); }
(rule__StructVariant__Group_4__0)*
{ after(grammarAccess.getStructVariantAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStructVariantAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructVariant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1__0__Impl
	rule__StructVariant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getStructVariantAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1__1__Impl
	rule__StructVariant__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getParamsAssignment_1_1()); }
(rule__StructVariant__ParamsAssignment_1_1)
{ after(grammarAccess.getStructVariantAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1__2__Impl
	rule__StructVariant__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getGroup_1_2()); }
(rule__StructVariant__Group_1_2__0)*
{ after(grammarAccess.getStructVariantAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getStructVariantAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructVariant__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1_2__0__Impl
	rule__StructVariant__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getStructVariantAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getParamsAssignment_1_2_1()); }
(rule__StructVariant__ParamsAssignment_1_2_1)
{ after(grammarAccess.getStructVariantAccess().getParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructVariant__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_4__0__Impl
	rule__StructVariant__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getStructVariantAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructVariant__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructVariant__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getFieldsAssignment_4_1()); }
(rule__StructVariant__FieldsAssignment_4_1)
{ after(grammarAccess.getStructVariantAccess().getFieldsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TupleVariant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group__0__Impl
	rule__TupleVariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getIdentAssignment_0()); }
(rule__TupleVariant__IdentAssignment_0)
{ after(grammarAccess.getTupleVariantAccess().getIdentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleVariant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group__1__Impl
	rule__TupleVariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTupleVariantAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleVariant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group__2__Impl
	rule__TupleVariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getTypesAssignment_2()); }
(rule__TupleVariant__TypesAssignment_2)
{ after(grammarAccess.getTupleVariantAccess().getTypesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleVariant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group__3__Impl
	rule__TupleVariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getGroup_3()); }
(rule__TupleVariant__Group_3__0)*
{ after(grammarAccess.getTupleVariantAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleVariant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getTupleVariantAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TupleVariant__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group_3__0__Impl
	rule__TupleVariant__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTupleVariantAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TupleVariant__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TupleVariant__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getTypesAssignment_3_1()); }
(rule__TupleVariant__TypesAssignment_3_1)
{ after(grammarAccess.getTupleVariantAccess().getTypesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Crate__ItemsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCrateAccess().getItemsItemAndAttrsParserRuleCall_0()); }
	ruleItemAndAttrs{ after(grammarAccess.getCrateAccess().getItemsItemAndAttrsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__AttrsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_1_0()); }
	ruleAttr{ after(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAttr__AttrsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_2_1_0()); }
	ruleAttr{ after(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getAttrWithListAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__AttrsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_2_0()); }
	ruleAttr{ after(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrWithList__AttrsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_3_1_0()); }
	ruleAttr{ after(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralAttr__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAttrAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getLiteralAttrAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralAttr__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAttrAccess().getValueLiteralParserRuleCall_2_0()); }
	ruleLiteral{ after(grammarAccess.getLiteralAttrAccess().getValueLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAndAttrs__AttrsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAndAttrsAccess().getAttrsItemAttrParserRuleCall_0_0()); }
	ruleItemAttr{ after(grammarAccess.getItemAndAttrsAccess().getAttrsItemAttrParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemAndAttrs__ItemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemAndAttrsAccess().getItemItemParserRuleCall_1_0()); }
	ruleItem{ after(grammarAccess.getItemAndAttrsAccess().getItemItemParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__IdentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getIdentIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getModItemAccess().getIdentIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__ExternalBodyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getExternalBodySemicolonKeyword_2_0_0()); }
(
{ before(grammarAccess.getModItemAccess().getExternalBodySemicolonKeyword_2_0_0()); }

	';' 

{ after(grammarAccess.getModItemAccess().getExternalBodySemicolonKeyword_2_0_0()); }
)

{ after(grammarAccess.getModItemAccess().getExternalBodySemicolonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModItem__ItemsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModItemAccess().getItemsItemAndAttrsParserRuleCall_2_1_1_0()); }
	ruleItemAndAttrs{ after(grammarAccess.getModItemAccess().getItemsItemAndAttrsParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__IdentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getIdentIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getFnItemAccess().getIdentIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__ArgsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_0_0()); }
	ruleArg{ after(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__ArgsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_1_1_0()); }
	ruleArg{ after(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__ReturnTypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getReturnTypeTypeParserRuleCall_6_1_0()); }
	ruleType{ after(grammarAccess.getFnItemAccess().getReturnTypeTypeParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnItem__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnItemAccess().getBodyBlockParserRuleCall_7_0()); }
	ruleBlock{ after(grammarAccess.getFnItemAccess().getBodyBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getGenericParamDeclAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__BoundsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_1_0()); }
	RULE_IDENT{ after(grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericParamDecl__BoundsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_2_1_0()); }
	RULE_IDENT{ after(grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__PatAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getPatPatParserRuleCall_0_0()); }
	rulePat{ after(grammarAccess.getArgAccess().getPatPatParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pat__IdentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatAccess().getIdentIDENTTerminalRuleCall_0()); }
	RULE_IDENT{ after(grammarAccess.getPatAccess().getIdentIDENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleType__TypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__IdentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getStructTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_4_0()); }
	ruleStructField{ after(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__FieldsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_5_1_0()); }
	ruleStructField{ after(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoxedType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoxedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getBoxedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OwnedType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOwnedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getOwnedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BorrowedType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBorrowedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getBorrowedTypeAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__VisAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getVisVisibilityEnumRuleCall_0_0()); }
	ruleVisibility{ after(grammarAccess.getStructFieldAccess().getVisVisibilityEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__IdentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getIdentIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getStructFieldAccess().getIdentIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructField__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getStructFieldAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__IdentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); }
	RULE_IDENT{ after(grammarAccess.getEnumTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__VariantsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_4_0()); }
	ruleVariant{ after(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__VariantsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_5_1_0()); }
	ruleVariant{ after(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getStructVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__ParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_2_1_0()); }
	ruleGenericParamDecl{ after(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__FieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_3_0()); }
	ruleStructField{ after(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructVariant__FieldsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_4_1_0()); }
	ruleStructField{ after(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__IdentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); }
	RULE_IDENT{ after(grammarAccess.getTupleVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__TypesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TupleVariant__TypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitVariant__IdentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitVariantAccess().getIdentIDENTTerminalRuleCall_0()); }
	RULE_IDENT{ after(grammarAccess.getUnitVariantAccess().getIdentIDENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLitAccess().getValueSTRING_LITTerminalRuleCall_0()); }
	RULE_STRING_LIT{ after(grammarAccess.getStringLitAccess().getValueSTRING_LITTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLitAccess().getValueAlternatives_0()); }
(rule__NumberLit__ValueAlternatives_0)
{ after(grammarAccess.getNumberLitAccess().getValueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLitAccess().getValueCHAR_LITTerminalRuleCall_0()); }
	RULE_CHAR_LIT{ after(grammarAccess.getCharLitAccess().getValueCHAR_LITTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INT_TYPE : RULE_INT_SIZE;

fragment RULE_INT_SIZE : (RULE_SIGNED_INT_TYPE|RULE_UNSIGNED_INT_TYPE);

fragment RULE_SIGNED_INT_TYPE : (RULE_I8|RULE_I16|RULE_I32|RULE_I64);

fragment RULE_I8 : 'i8';

fragment RULE_I16 : 'i16';

fragment RULE_I32 : 'i32';

fragment RULE_I64 : 'i64';

fragment RULE_UNSIGNED_INT_TYPE : (RULE_U8|RULE_U16|RULE_U32|RULE_U64);

fragment RULE_U8 : 'u8';

fragment RULE_U16 : 'u16';

fragment RULE_U32 : 'u32';

fragment RULE_U64 : 'u64';

RULE_FLOAT_TYPE : RULE_FLOAT_SIZE;

fragment RULE_FLOAT_SIZE : (RULE_F32|RULE_F64);

fragment RULE_F32 : 'f32';

fragment RULE_F64 : 'f64';

RULE_BOOLEAN_TYPE : 'bool';

RULE_MACHINE_TYPE : (RULE_MACHINE_INT_TYPE|RULE_MACHINE_UINT_TYPE);

fragment RULE_MACHINE_INT_TYPE : 'int';

fragment RULE_MACHINE_UINT_TYPE : 'uint';

RULE_UNIT_TYPE : '()';

RULE_CHAR_LIT : '\'' ('\\' ('\\'|'n'|'r'|'t'|'0')|RULE_UNICODE_CHAR|~(('\\'|'\'')))* '\'';

RULE_STRING_LIT : '"' ('\\' ('\\'|'n'|'r'|'t'|'0')|RULE_UNICODE_CHAR|~(('\\'|'"')))* '"';

fragment RULE_UNICODE_CHAR : (RULE_UTF8_CHAR|RULE_UTF16_CHAR|RULE_UTF32_CHAR);

fragment RULE_UTF8_CHAR : '\\x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_UTF16_CHAR : '\\u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_UTF32_CHAR : '\\U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

RULE_FLOAT_LIT : RULE_DEC_DIGIT (RULE_DEC_DIGIT|'_')* '.' (RULE_DEC_DIGIT|'_')+ (('E'|'e') ('+'|'-')? (RULE_DEC_DIGIT|'_')+)? RULE_FLOAT_SIZE?;

RULE_INT_LIT : (RULE_DEC_INT_LIT|RULE_BIN_INT_LIT|RULE_OCT_INT_LIT|RULE_HEX_INT_LIT) RULE_INT_SIZE?;

fragment RULE_DEC_INT_LIT : RULE_DEC_DIGIT (RULE_DEC_DIGIT|'_')*;

fragment RULE_BIN_INT_LIT : '0b' ('0'|'1'|'_')+;

fragment RULE_OCT_INT_LIT : '0o' (RULE_OCT_DIGIT|'_')+;

fragment RULE_HEX_INT_LIT : '0x' (RULE_HEX_DIGIT|'_')+;

fragment RULE_OCT_DIGIT : '0'..'7';

fragment RULE_DEC_DIGIT : '0'..'9';

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_XID_START : 'a'..'z';

fragment RULE_XID_CONTINUE : ('a'..'z'|'_');

RULE_IDENT : RULE_XID_START RULE_XID_CONTINUE*;


