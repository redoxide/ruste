/*
* generated by Xtext
*/
grammar InternalRust;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.redoxi.ruste.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.redoxi.ruste.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.redoxi.ruste.services.RustGrammarAccess;

}

@parser::members {

 	private RustGrammarAccess grammarAccess;
 	
    public InternalRustParser(TokenStream input, RustGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Crate";	
   	}
   	
   	@Override
   	protected RustGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCrate
entryRuleCrate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCrateRule()); }
	 iv_ruleCrate=ruleCrate 
	 { $current=$iv_ruleCrate.current; } 
	 EOF 
;

// Rule Crate
ruleCrate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCrateAccess().getItemsItemAndAttrsParserRuleCall_0()); 
	    }
		lv_items_0_0=ruleItemAndAttrs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCrateRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_0_0, 
        		"ItemAndAttrs");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleItemAttr
entryRuleItemAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItemAttrRule()); }
	 iv_ruleItemAttr=ruleItemAttr 
	 { $current=$iv_ruleItemAttr.current; } 
	 EOF 
;

// Rule ItemAttr
ruleItemAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItemAttrAccess().getNumberSignLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_1_0()); 
	    }
		lv_attrs_1_0=ruleAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemAttrRule());
	        }
       		add(
       			$current, 
       			"attrs",
        		lv_attrs_1_0, 
        		"Attr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getItemAttrAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getItemAttrAccess().getAttrsAttrParserRuleCall_2_1_0()); 
	    }
		lv_attrs_3_0=ruleAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemAttrRule());
	        }
       		add(
       			$current, 
       			"attrs",
        		lv_attrs_3_0, 
        		"Attr");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getItemAttrAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleAttr
entryRuleAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrRule()); }
	 iv_ruleAttr=ruleAttr 
	 { $current=$iv_ruleAttr.current; } 
	 EOF 
;

// Rule Attr
ruleAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAttrAccess().getLiteralAttrParserRuleCall_0()); 
    }
    this_LiteralAttr_0=ruleLiteralAttr
    { 
        $current = $this_LiteralAttr_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAttrAccess().getAttrWithListParserRuleCall_1()); 
    }
    this_AttrWithList_1=ruleAttrWithList
    { 
        $current = $this_AttrWithList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttrWithList
entryRuleAttrWithList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrWithListRule()); }
	 iv_ruleAttrWithList=ruleAttrWithList 
	 { $current=$iv_ruleAttrWithList.current; } 
	 EOF 
;

// Rule AttrWithList
ruleAttrWithList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getAttrWithListAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrWithListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttrWithListAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_2_0()); 
	    }
		lv_attrs_2_0=ruleAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrWithListRule());
	        }
       		add(
       			$current, 
       			"attrs",
        		lv_attrs_2_0, 
        		"Attr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttrWithListAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrWithListAccess().getAttrsAttrParserRuleCall_3_1_0()); 
	    }
		lv_attrs_4_0=ruleAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrWithListRule());
	        }
       		add(
       			$current, 
       			"attrs",
        		lv_attrs_4_0, 
        		"Attr");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttrWithListAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLiteralAttr
entryRuleLiteralAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralAttrRule()); }
	 iv_ruleLiteralAttr=ruleLiteralAttr 
	 { $current=$iv_ruleLiteralAttr.current; } 
	 EOF 
;

// Rule LiteralAttr
ruleLiteralAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getLiteralAttrAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralAttrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralAttrAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAttrAccess().getValueLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralAttrRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleItemAndAttrs
entryRuleItemAndAttrs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItemAndAttrsRule()); }
	 iv_ruleItemAndAttrs=ruleItemAndAttrs 
	 { $current=$iv_ruleItemAndAttrs.current; } 
	 EOF 
;

// Rule ItemAndAttrs
ruleItemAndAttrs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getItemAndAttrsAccess().getAttrsItemAttrParserRuleCall_0_0()); 
	    }
		lv_attrs_0_0=ruleItemAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemAndAttrsRule());
	        }
       		add(
       			$current, 
       			"attrs",
        		lv_attrs_0_0, 
        		"ItemAttr");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getItemAndAttrsAccess().getItemItemParserRuleCall_1_0()); 
	    }
		lv_item_1_0=ruleItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemAndAttrsRule());
	        }
       		set(
       			$current, 
       			"item",
        		lv_item_1_0, 
        		"Item");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItemRule()); }
	 iv_ruleItem=ruleItem 
	 { $current=$iv_ruleItem.current; } 
	 EOF 
;

// Rule Item
ruleItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getItemAccess().getModItemParserRuleCall_0()); 
    }
    this_ModItem_0=ruleModItem
    { 
        $current = $this_ModItem_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getFnItemParserRuleCall_1()); 
    }
    this_FnItem_1=ruleFnItem
    { 
        $current = $this_FnItem_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getTypeItemParserRuleCall_2()); 
    }
    this_TypeItem_2=ruleTypeItem
    { 
        $current = $this_TypeItem_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getStructItemParserRuleCall_3()); 
    }
    this_StructItem_3=ruleStructItem
    { 
        $current = $this_StructItem_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getEnumItemParserRuleCall_4()); 
    }
    this_EnumItem_4=ruleEnumItem
    { 
        $current = $this_EnumItem_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getTraitItemParserRuleCall_5()); 
    }
    this_TraitItem_5=ruleTraitItem
    { 
        $current = $this_TraitItem_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getImplItemParserRuleCall_6()); 
    }
    this_ImplItem_6=ruleImplItem
    { 
        $current = $this_ImplItem_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getExternBlockParserRuleCall_7()); 
    }
    this_ExternBlock_7=ruleExternBlock
    { 
        $current = $this_ExternBlock_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getItemAccess().getStaticItemParserRuleCall_8()); 
    }
    this_StaticItem_8=ruleStaticItem
    { 
        $current = $this_StaticItem_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleModItem
entryRuleModItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModItemRule()); }
	 iv_ruleModItem=ruleModItem 
	 { $current=$iv_ruleModItem.current; } 
	 EOF 
;

// Rule ModItem
ruleModItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mod' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModItemAccess().getModKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getModItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)((
(
		lv_externalBody_2_0=	';' 
    {
        newLeafNode(lv_externalBody_2_0, grammarAccess.getModItemAccess().getExternalBodySemicolonKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModItemRule());
	        }
       		setWithLastConsumed($current, "externalBody", true, ";");
	    }

)
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModItemAccess().getLeftCurlyBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModItemAccess().getItemsItemAndAttrsParserRuleCall_2_1_1_0()); 
	    }
		lv_items_4_0=ruleItemAndAttrs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModItemRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_4_0, 
        		"ItemAndAttrs");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModItemAccess().getRightCurlyBracketKeyword_2_1_2());
    }
)))
;





// Entry rule entryRuleFnItem
entryRuleFnItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFnItemRule()); }
	 iv_ruleFnItem=ruleFnItem 
	 { $current=$iv_ruleFnItem.current; } 
	 EOF 
;

// Rule FnItem
ruleFnItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fn' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFnItemAccess().getFnKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getFnItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFnItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFnItemAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFnItemAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFnItemAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFnItemAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_0_0()); 
	    }
		lv_args_8_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_8_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFnItemAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getArgsArgParserRuleCall_4_1_1_0()); 
	    }
		lv_args_10_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_10_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFnItemAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_12='->' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFnItemAccess().getHyphenMinusGreaterThanSignKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getReturnTypeTypeParserRuleCall_6_1_0()); 
	    }
		lv_returnType_13_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_13_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getFnItemAccess().getBodyBlockParserRuleCall_7_0()); 
	    }
		lv_body_14_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnItemRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_14_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypeItem
entryRuleTypeItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeItemRule()); }
	 iv_ruleTypeItem=ruleTypeItem 
	 { $current=$iv_ruleTypeItem.current; } 
	 EOF 
;

// Rule TypeItem
ruleTypeItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeItemAccess().getTypeKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getTypeItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeItemAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeItemAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypeItemAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypeItemAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeItemAccess().getTypeTypeParserRuleCall_4_0()); 
	    }
		lv_type_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeItemRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypeItemAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleStructItem
entryRuleStructItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructItemRule()); }
	 iv_ruleStructItem=ruleStructItem 
	 { $current=$iv_ruleStructItem.current; } 
	 EOF 
;

// Rule StructItem
ruleStructItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructItemAccess().getStructKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getStructItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructItemAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStructItemAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructItemAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStructItemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructItemAccess().getFieldsStructFieldParserRuleCall_4_0()); 
	    }
		lv_fields_8_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructItemRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_8_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStructItemAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructItemAccess().getFieldsStructFieldParserRuleCall_5_1_0()); 
	    }
		lv_fields_10_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructItemRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_10_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStructItemAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEnumItem
entryRuleEnumItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumItemRule()); }
	 iv_ruleEnumItem=ruleEnumItem 
	 { $current=$iv_ruleEnumItem.current; } 
	 EOF 
;

// Rule EnumItem
ruleEnumItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumItemAccess().getEnumKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getEnumItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumItemAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumItemAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumItemAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumItemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumItemAccess().getVariantsEnumVariantParserRuleCall_4_0()); 
	    }
		lv_variants_8_0=ruleEnumVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumItemRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_8_0, 
        		"EnumVariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumItemAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumItemAccess().getVariantsEnumVariantParserRuleCall_5_1_0()); 
	    }
		lv_variants_10_0=ruleEnumVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumItemRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_10_0, 
        		"EnumVariant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEnumItemAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEnumVariant
entryRuleEnumVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumVariantRule()); }
	 iv_ruleEnumVariant=ruleEnumVariant 
	 { $current=$iv_ruleEnumVariant.current; } 
	 EOF 
;

// Rule EnumVariant
ruleEnumVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getEnumVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumVariantAccess().getLessThanSignKeyword_1_0());
    }
(
(
		lv_params_2_0=RULE_IDENT
		{
			newLeafNode(lv_params_2_0, grammarAccess.getEnumVariantAccess().getParamsIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumVariantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumVariantAccess().getCommaKeyword_1_2_0());
    }
(
(
		lv_params_4_0=RULE_IDENT
		{
			newLeafNode(lv_params_4_0, grammarAccess.getEnumVariantAccess().getParamsIDENTTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumVariantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"IDENT");
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumVariantAccess().getGreaterThanSignKeyword_1_3());
    }
)?((	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumVariantAccess().getLeftParenthesisKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumVariantAccess().getTypesTypeParserRuleCall_2_0_1_0()); 
	    }
		lv_types_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumVariantRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEnumVariantAccess().getCommaKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumVariantAccess().getTypesTypeParserRuleCall_2_0_2_1_0()); 
	    }
		lv_types_9_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumVariantRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_9_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEnumVariantAccess().getRightParenthesisKeyword_2_0_3());
    }
)
    |(	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEnumVariantAccess().getLeftCurlyBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumVariantAccess().getFieldsStructFieldParserRuleCall_2_1_1_0()); 
	    }
		lv_fields_12_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumVariantRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_12_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEnumVariantAccess().getCommaKeyword_2_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumVariantAccess().getFieldsStructFieldParserRuleCall_2_1_2_1_0()); 
	    }
		lv_fields_14_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumVariantRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_14_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getEnumVariantAccess().getRightCurlyBracketKeyword_2_1_3());
    }
))?)
;





// Entry rule entryRuleTraitItem
entryRuleTraitItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraitItemRule()); }
	 iv_ruleTraitItem=ruleTraitItem 
	 { $current=$iv_ruleTraitItem.current; } 
	 EOF 
;

// Rule TraitItem
ruleTraitItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='trait' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTraitItemAccess().getTraitKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getTraitItemAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraitItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTraitItemAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitItemAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTraitItemAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitItemAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitItemRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTraitItemAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTraitItemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitItemAccess().getMethodsTraitMethodParserRuleCall_4_0()); 
	    }
		lv_methods_8_0=ruleTraitMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitItemRule());
	        }
       		add(
       			$current, 
       			"methods",
        		lv_methods_8_0, 
        		"TraitMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTraitItemAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTraitMethod
entryRuleTraitMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraitMethodRule()); }
	 iv_ruleTraitMethod=ruleTraitMethod 
	 { $current=$iv_ruleTraitMethod.current; } 
	 EOF 
;

// Rule TraitMethod
ruleTraitMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_unsafe_0_0=	'unsafe' 
    {
        newLeafNode(lv_unsafe_0_0, grammarAccess.getTraitMethodAccess().getUnsafeUnsafeKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraitMethodRule());
	        }
       		setWithLastConsumed($current, "unsafe", true, "unsafe");
	    }

)
)
    |(
(
		lv_extern_1_0=	'extern' 
    {
        newLeafNode(lv_extern_1_0, grammarAccess.getTraitMethodAccess().getExternExternKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraitMethodRule());
	        }
       		setWithLastConsumed($current, "extern", true, "extern");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getVisVisibilityEnumRuleCall_1_0()); 
	    }
		lv_vis_2_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		set(
       			$current, 
       			"vis",
        		lv_vis_2_0, 
        		"Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='fn' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTraitMethodAccess().getFnKeyword_2());
    }
(
(
		lv_ident_4_0=RULE_IDENT
		{
			newLeafNode(lv_ident_4_0, grammarAccess.getTraitMethodAccess().getIdentIDENTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraitMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_4_0, 
        		"IDENT");
	    }

)
)(	otherlv_5='<' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTraitMethodAccess().getLessThanSignKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getParamsGenericParamDeclParserRuleCall_4_1_0()); 
	    }
		lv_params_6_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTraitMethodAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getParamsGenericParamDeclParserRuleCall_4_2_1_0()); 
	    }
		lv_params_8_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_8_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='>' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTraitMethodAccess().getGreaterThanSignKeyword_4_3());
    }
)?	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTraitMethodAccess().getLeftParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getArgsArgParserRuleCall_6_0_0()); 
	    }
		lv_args_11_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_11_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTraitMethodAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getArgsArgParserRuleCall_6_1_1_0()); 
	    }
		lv_args_13_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_13_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTraitMethodAccess().getRightParenthesisKeyword_7());
    }
(	otherlv_15='->' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTraitMethodAccess().getHyphenMinusGreaterThanSignKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getReturnTypeTypeParserRuleCall_8_1_0()); 
	    }
		lv_returnType_16_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_16_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getTraitMethodAccess().getBodyBlockParserRuleCall_9_0_0()); 
	    }
		lv_body_17_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraitMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_17_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_18=';' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getTraitMethodAccess().getSemicolonKeyword_9_1());
    }
))
;





// Entry rule entryRuleImplItem
entryRuleImplItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplItemRule()); }
	 iv_ruleImplItem=ruleImplItem 
	 { $current=$iv_ruleImplItem.current; } 
	 EOF 
;

// Rule ImplItem
ruleImplItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='impl' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImplItemAccess().getImplKeyword_0());
    }
((
(
		lv_trait_1_0=RULE_IDENT
		{
			newLeafNode(lv_trait_1_0, grammarAccess.getImplItemAccess().getTraitIDENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"trait",
        		lv_trait_1_0, 
        		"IDENT");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImplItemAccess().getForKeyword_1_1());
    }
)?(
(
		lv_struct_3_0=RULE_IDENT
		{
			newLeafNode(lv_struct_3_0, grammarAccess.getImplItemAccess().getStructIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"struct",
        		lv_struct_3_0, 
        		"IDENT");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImplItemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImplItemAccess().getMethodsImplMethodParserRuleCall_4_0()); 
	    }
		lv_methods_5_0=ruleImplMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplItemRule());
	        }
       		add(
       			$current, 
       			"methods",
        		lv_methods_5_0, 
        		"ImplMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getImplItemAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleImplMethod
entryRuleImplMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplMethodRule()); }
	 iv_ruleImplMethod=ruleImplMethod 
	 { $current=$iv_ruleImplMethod.current; } 
	 EOF 
;

// Rule ImplMethod
ruleImplMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_unsafe_0_0=	'unsafe' 
    {
        newLeafNode(lv_unsafe_0_0, grammarAccess.getImplMethodAccess().getUnsafeUnsafeKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplMethodRule());
	        }
       		setWithLastConsumed($current, "unsafe", true, "unsafe");
	    }

)
)
    |(
(
		lv_extern_1_0=	'extern' 
    {
        newLeafNode(lv_extern_1_0, grammarAccess.getImplMethodAccess().getExternExternKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplMethodRule());
	        }
       		setWithLastConsumed($current, "extern", true, "extern");
	    }

)
))?	otherlv_2='fn' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImplMethodAccess().getFnKeyword_1());
    }
(
(
		lv_ident_3_0=RULE_IDENT
		{
			newLeafNode(lv_ident_3_0, grammarAccess.getImplMethodAccess().getIdentIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_3_0, 
        		"IDENT");
	    }

)
)(	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImplMethodAccess().getLessThanSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getParamsGenericParamDeclParserRuleCall_3_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getImplMethodAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getParamsGenericParamDeclParserRuleCall_3_2_1_0()); 
	    }
		lv_params_7_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getImplMethodAccess().getGreaterThanSignKeyword_3_3());
    }
)?	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getImplMethodAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getArgsArgParserRuleCall_5_0_0()); 
	    }
		lv_args_10_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_10_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getImplMethodAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getArgsArgParserRuleCall_5_1_1_0()); 
	    }
		lv_args_12_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_12_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getImplMethodAccess().getRightParenthesisKeyword_6());
    }
(	otherlv_14='->' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getImplMethodAccess().getHyphenMinusGreaterThanSignKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getReturnTypeTypeParserRuleCall_7_1_0()); 
	    }
		lv_returnType_15_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_15_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getImplMethodAccess().getBodyBlockParserRuleCall_8_0()); 
	    }
		lv_body_16_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImplMethodRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_16_0, 
        		"Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExternBlock
entryRuleExternBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternBlockRule()); }
	 iv_ruleExternBlock=ruleExternBlock 
	 { $current=$iv_ruleExternBlock.current; } 
	 EOF 
;

// Rule ExternBlock
ruleExternBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExternBlockAccess().getExternBlockAction_0(),
            $current);
    }
)	otherlv_1='extern' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternBlockAccess().getExternKeyword_1());
    }
(
(
		lv_abi_2_0=RULE_STRING_LIT
		{
			newLeafNode(lv_abi_2_0, grammarAccess.getExternBlockAccess().getAbiSTRING_LITTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternBlockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"abi",
        		lv_abi_2_0, 
        		"STRING_LIT");
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternBlockAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternBlockAccess().getFunctionsForeignFnParserRuleCall_4_0()); 
	    }
		lv_functions_4_0=ruleForeignFn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternBlockRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_4_0, 
        		"ForeignFn");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExternBlockAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleForeignFn
entryRuleForeignFn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForeignFnRule()); }
	 iv_ruleForeignFn=ruleForeignFn 
	 { $current=$iv_ruleForeignFn.current; } 
	 EOF 
;

// Rule ForeignFn
ruleForeignFn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fn' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForeignFnAccess().getFnKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getForeignFnAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForeignFnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForeignFnAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getForeignFnAccess().getArgsArgParserRuleCall_3_0_0()); 
	    }
		lv_args_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeignFnRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getForeignFnAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeignFnAccess().getArgsArgParserRuleCall_3_1_1_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeignFnRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getForeignFnAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForeignFnAccess().getHyphenMinusGreaterThanSignKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeignFnAccess().getReturnTypeTypeParserRuleCall_5_1_0()); 
	    }
		lv_returnType_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeignFnRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_8_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getForeignFnAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleStaticItem
entryRuleStaticItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticItemRule()); }
	 iv_ruleStaticItem=ruleStaticItem 
	 { $current=$iv_ruleStaticItem.current; } 
	 EOF 
;

// Rule StaticItem
ruleStaticItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='static' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStaticItemAccess().getStaticKeyword_0());
    }
(
(
		lv_mutable_1_0=RULE_MUT_KEYWORD
		{
			newLeafNode(lv_mutable_1_0, grammarAccess.getStaticItemAccess().getMutableMUT_KEYWORDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStaticItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mutable",
        		true, 
        		"MUT_KEYWORD");
	    }

)
)(
(
		lv_ident_2_0=RULE_IDENT
		{
			newLeafNode(lv_ident_2_0, grammarAccess.getStaticItemAccess().getIdentIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStaticItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStaticItemAccess().getColonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticItemAccess().getTypeTypeParserRuleCall_3_1_0()); 
	    }
		lv_type_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticItemRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStaticItemAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStaticItemAccess().getExprExprParserRuleCall_5_0()); 
	    }
		lv_expr_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStaticItemRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStaticItemAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	 iv_ruleExpr=ruleExpr 
	 { $current=$iv_ruleExpr.current; } 
	 EOF 
;

// Rule Expr
ruleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprAccess().getExprLValueParserRuleCall_0()); 
    }
    this_ExprLValue_0=ruleExprLValue
    { 
        $current = $this_ExprLValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprAccess().getExprRValueParserRuleCall_1()); 
    }
    this_ExprRValue_1=ruleExprRValue
    { 
        $current = $this_ExprRValue_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExprLValue
entryRuleExprLValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprLValueRule()); }
	 iv_ruleExprLValue=ruleExprLValue 
	 { $current=$iv_ruleExprLValue.current; } 
	 EOF 
;

// Rule ExprLValue
ruleExprLValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExprLValueAccess().getExprPathParserRuleCall()); 
    }
    this_ExprPath_0=ruleExprPath
    { 
        $current = $this_ExprPath_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleExprRValue
entryRuleExprRValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRValueRule()); }
	 iv_ruleExprRValue=ruleExprRValue 
	 { $current=$iv_ruleExprRValue.current; } 
	 EOF 
;

// Rule ExprRValue
ruleExprRValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprRValueAccess().getExprLiteralParserRuleCall_0()); 
    }
    this_ExprLiteral_0=ruleExprLiteral
    { 
        $current = $this_ExprLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprRValueAccess().getExprTupleParserRuleCall_1()); 
    }
    this_ExprTuple_1=ruleExprTuple
    { 
        $current = $this_ExprTuple_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprRValueAccess().getExprStructParserRuleCall_2()); 
    }
    this_ExprStruct_2=ruleExprStruct
    { 
        $current = $this_ExprStruct_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprRValueAccess().getExprVecParserRuleCall_3()); 
    }
    this_ExprVec_3=ruleExprVec
    { 
        $current = $this_ExprVec_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprRValueAccess().getExprUnaryParserRuleCall_4()); 
    }
    this_ExprUnary_4=ruleExprUnary
    { 
        $current = $this_ExprUnary_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExprLiteral
entryRuleExprLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprLiteralRule()); }
	 iv_ruleExprLiteral=ruleExprLiteral 
	 { $current=$iv_ruleExprLiteral.current; } 
	 EOF 
;

// Rule ExprLiteral
ruleExprLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprLiteralAccess().getLiteralLiteralParserRuleCall_0()); 
	    }
		lv_literal_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprLiteralRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExprPath
entryRuleExprPath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprPathRule()); }
	 iv_ruleExprPath=ruleExprPath 
	 { $current=$iv_ruleExprPath.current; } 
	 EOF 
;

// Rule ExprPath
ruleExprPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExprPathAccess().getPathPathParserRuleCall_0_0()); 
	    }
		lv_path_0_0=rulePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprPathRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"Path");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprPathAccess().getExprStructPathAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprPathAccess().getStructExprStructParserRuleCall_1_0_1_0()); 
	    }
		lv_struct_2_0=ruleExprStruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprPathRule());
	        }
       		set(
       			$current, 
       			"struct",
        		lv_struct_2_0, 
        		"ExprStruct");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExprPathAccess().getExprTuplePathAction_1_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExprPathAccess().getTupleExprTupleParserRuleCall_1_1_1_0()); 
	    }
		lv_tuple_4_0=ruleExprTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprPathRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_4_0, 
        		"ExprTuple");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleExprTuple
entryRuleExprTuple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprTupleRule()); }
	 iv_ruleExprTuple=ruleExprTuple 
	 { $current=$iv_ruleExprTuple.current; } 
	 EOF 
;

// Rule ExprTuple
ruleExprTuple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExprTupleAccess().getLeftParenthesisKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExprTupleAccess().getExprsExprParserRuleCall_1_0_0()); 
	    }
		lv_exprs_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprTupleRule());
	        }
       		add(
       			$current, 
       			"exprs",
        		lv_exprs_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExprTupleAccess().getCommaKeyword_1_1());
    }
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExprTupleAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleExprStruct
entryRuleExprStruct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprStructRule()); }
	 iv_ruleExprStruct=ruleExprStruct 
	 { $current=$iv_ruleExprStruct.current; } 
	 EOF 
;

// Rule ExprStruct
ruleExprStruct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExprStructAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprStructAccess().getFieldsStructFieldParserRuleCall_1_0()); 
	    }
		lv_fields_1_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprStructRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExprStructAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprStructAccess().getFieldsStructFieldParserRuleCall_2_1_0()); 
	    }
		lv_fields_3_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprStructRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_3_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExprStructAccess().getFullStopFullStopKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprStructAccess().getBaseExprExprParserRuleCall_3_1_0()); 
	    }
		lv_baseExpr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprStructRule());
	        }
       		set(
       			$current, 
       			"baseExpr",
        		lv_baseExpr_5_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExprStructAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExprVec
entryRuleExprVec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprVecRule()); }
	 iv_ruleExprVec=ruleExprVec 
	 { $current=$iv_ruleExprVec.current; } 
	 EOF 
;

// Rule ExprVec
ruleExprVec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExprVecAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_mutable_1_0=RULE_MUT_KEYWORD
		{
			newLeafNode(lv_mutable_1_0, grammarAccess.getExprVecAccess().getMutableMUT_KEYWORDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExprVecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mutable",
        		true, 
        		"MUT_KEYWORD");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getExprVecAccess().getExprsExprParserRuleCall_2_0_0()); 
	    }
		lv_exprs_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprVecRule());
	        }
       		add(
       			$current, 
       			"exprs",
        		lv_exprs_2_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExprVecAccess().getCommaKeyword_2_1());
    }
((	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExprVecAccess().getFullStopFullStopKeyword_2_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprVecAccess().getLenExprExprParserRuleCall_2_2_0_1_0()); 
	    }
		lv_lenExpr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprVecRule());
	        }
       		set(
       			$current, 
       			"lenExpr",
        		lv_lenExpr_5_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getExprVecAccess().getExprsExprParserRuleCall_2_2_1_0_0()); 
	    }
		lv_exprs_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprVecRule());
	        }
       		add(
       			$current, 
       			"exprs",
        		lv_exprs_6_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExprVecAccess().getCommaKeyword_2_2_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprVecAccess().getExprsExprParserRuleCall_2_2_1_1_1_0()); 
	    }
		lv_exprs_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprVecRule());
	        }
       		add(
       			$current, 
       			"exprs",
        		lv_exprs_8_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))+)))?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExprVecAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleExprUnary
entryRuleExprUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprUnaryRule()); }
	 iv_ruleExprUnary=ruleExprUnary 
	 { $current=$iv_ruleExprUnary.current; } 
	 EOF 
;

// Rule ExprUnary
ruleExprUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getNumericNegationParserRuleCall_0()); 
    }
    this_NumericNegation_0=ruleNumericNegation
    { 
        $current = $this_NumericNegation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getDereferenceParserRuleCall_1()); 
    }
    this_Dereference_1=ruleDereference
    { 
        $current = $this_Dereference_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getLogicalNegationParserRuleCall_2()); 
    }
    this_LogicalNegation_2=ruleLogicalNegation
    { 
        $current = $this_LogicalNegation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getManagedBoxParserRuleCall_3()); 
    }
    this_ManagedBox_3=ruleManagedBox
    { 
        $current = $this_ManagedBox_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getOwnedBoxParserRuleCall_4()); 
    }
    this_OwnedBox_4=ruleOwnedBox
    { 
        $current = $this_OwnedBox_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExprUnaryAccess().getBorrowParserRuleCall_5()); 
    }
    this_Borrow_5=ruleBorrow
    { 
        $current = $this_Borrow_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNumericNegation
entryRuleNumericNegation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericNegationRule()); }
	 iv_ruleNumericNegation=ruleNumericNegation 
	 { $current=$iv_ruleNumericNegation.current; } 
	 EOF 
;

// Rule NumericNegation
ruleNumericNegation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumericNegationAccess().getHyphenMinusKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericNegationAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericNegationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDereference
entryRuleDereference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDereferenceRule()); }
	 iv_ruleDereference=ruleDereference 
	 { $current=$iv_ruleDereference.current; } 
	 EOF 
;

// Rule Dereference
ruleDereference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='*' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDereferenceAccess().getAsteriskKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDereferenceAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDereferenceRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLogicalNegation
entryRuleLogicalNegation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalNegationRule()); }
	 iv_ruleLogicalNegation=ruleLogicalNegation 
	 { $current=$iv_ruleLogicalNegation.current; } 
	 EOF 
;

// Rule LogicalNegation
ruleLogicalNegation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='!' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicalNegationAccess().getExclamationMarkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalNegationAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalNegationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleManagedBox
entryRuleManagedBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManagedBoxRule()); }
	 iv_ruleManagedBox=ruleManagedBox 
	 { $current=$iv_ruleManagedBox.current; } 
	 EOF 
;

// Rule ManagedBox
ruleManagedBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getManagedBoxAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getManagedBoxAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManagedBoxRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOwnedBox
entryRuleOwnedBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOwnedBoxRule()); }
	 iv_ruleOwnedBox=ruleOwnedBox 
	 { $current=$iv_ruleOwnedBox.current; } 
	 EOF 
;

// Rule OwnedBox
ruleOwnedBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOwnedBoxAccess().getTildeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOwnedBoxAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOwnedBoxRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBorrow
entryRuleBorrow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorrowRule()); }
	 iv_ruleBorrow=ruleBorrow 
	 { $current=$iv_ruleBorrow.current; } 
	 EOF 
;

// Rule Borrow
ruleBorrow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBorrowAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorrowAccess().getExprExprParserRuleCall_1_0()); 
	    }
		lv_expr_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorrowRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_1_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleGenericParamDecl
entryRuleGenericParamDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenericParamDeclRule()); }
	 iv_ruleGenericParamDecl=ruleGenericParamDecl 
	 { $current=$iv_ruleGenericParamDecl.current; } 
	 EOF 
;

// Rule GenericParamDecl
ruleGenericParamDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getGenericParamDeclAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenericParamDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGenericParamDeclAccess().getColonKeyword_1_0());
    }
(
(
		lv_bounds_2_0=RULE_IDENT
		{
			newLeafNode(lv_bounds_2_0, grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenericParamDeclRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"bounds",
        		lv_bounds_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3='+' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGenericParamDeclAccess().getPlusSignKeyword_1_2_0());
    }
(
(
		lv_bounds_4_0=RULE_IDENT
		{
			newLeafNode(lv_bounds_4_0, grammarAccess.getGenericParamDeclAccess().getBoundsIDENTTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenericParamDeclRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"bounds",
        		lv_bounds_4_0, 
        		"IDENT");
	    }

)
)))?)
;





// Entry rule entryRuleArg
entryRuleArg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgRule()); }
	 iv_ruleArg=ruleArg 
	 { $current=$iv_ruleArg.current; } 
	 EOF 
;

// Rule Arg
ruleArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getPatPatParserRuleCall_0_0()); 
	    }
		lv_pat_0_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		set(
       			$current, 
       			"pat",
        		lv_pat_0_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePat
entryRulePat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatRule()); }
	 iv_rulePat=rulePat 
	 { $current=$iv_rulePat.current; } 
	 EOF 
;

// Rule Pat
rulePat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatWildcardParserRuleCall_0()); 
    }
    this_PatWildcard_0=rulePatWildcard
    { 
        $current = $this_PatWildcard_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatIdentParserRuleCall_1()); 
    }
    this_PatIdent_1=rulePatIdent
    { 
        $current = $this_PatIdent_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatBoxedParserRuleCall_2()); 
    }
    this_PatBoxed_2=rulePatBoxed
    { 
        $current = $this_PatBoxed_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatOwnedParserRuleCall_3()); 
    }
    this_PatOwned_3=rulePatOwned
    { 
        $current = $this_PatOwned_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatBorrowedParserRuleCall_4()); 
    }
    this_PatBorrowed_4=rulePatBorrowed
    { 
        $current = $this_PatBorrowed_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatTupleParserRuleCall_5()); 
    }
    this_PatTuple_5=rulePatTuple
    { 
        $current = $this_PatTuple_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatVectorParserRuleCall_6()); 
    }
    this_PatVector_6=rulePatVector
    { 
        $current = $this_PatVector_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatLiteralParserRuleCall_7()); 
    }
    this_PatLiteral_7=rulePatLiteral
    { 
        $current = $this_PatLiteral_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatRangeParserRuleCall_8()); 
    }
    this_PatRange_8=rulePatRange
    { 
        $current = $this_PatRange_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatAccess().getPatEnumParserRuleCall_9()); 
    }
    this_PatEnum_9=rulePatEnum
    { 
        $current = $this_PatEnum_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePatWildcard
entryRulePatWildcard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatWildcardRule()); }
	 iv_rulePatWildcard=rulePatWildcard 
	 { $current=$iv_rulePatWildcard.current; } 
	 EOF 
;

// Rule PatWildcard
rulePatWildcard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPatWildcardAccess().getPatWildcardAction_0(),
            $current);
    }
)	otherlv_1='_' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPatWildcardAccess().get_Keyword_1());
    }
)
;





// Entry rule entryRulePatIdent
entryRulePatIdent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatIdentRule()); }
	 iv_rulePatIdent=rulePatIdent 
	 { $current=$iv_rulePatIdent.current; } 
	 EOF 
;

// Rule PatIdent
rulePatIdent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mutable_0_0=RULE_MUT_KEYWORD
		{
			newLeafNode(lv_mutable_0_0, grammarAccess.getPatIdentAccess().getMutableMUT_KEYWORDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatIdentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mutable",
        		true, 
        		"MUT_KEYWORD");
	    }

)
)(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getPatIdentAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatIdentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRulePatBoxed
entryRulePatBoxed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatBoxedRule()); }
	 iv_rulePatBoxed=rulePatBoxed 
	 { $current=$iv_rulePatBoxed.current; } 
	 EOF 
;

// Rule PatBoxed
rulePatBoxed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatBoxedAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatBoxedAccess().getPatternPatParserRuleCall_1_0()); 
	    }
		lv_pattern_1_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatBoxedRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_1_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatOwned
entryRulePatOwned returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatOwnedRule()); }
	 iv_rulePatOwned=rulePatOwned 
	 { $current=$iv_rulePatOwned.current; } 
	 EOF 
;

// Rule PatOwned
rulePatOwned returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatOwnedAccess().getTildeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatOwnedAccess().getPatternPatParserRuleCall_1_0()); 
	    }
		lv_pattern_1_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatOwnedRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_1_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatBorrowed
entryRulePatBorrowed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatBorrowedRule()); }
	 iv_rulePatBorrowed=rulePatBorrowed 
	 { $current=$iv_rulePatBorrowed.current; } 
	 EOF 
;

// Rule PatBorrowed
rulePatBorrowed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatBorrowedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatBorrowedAccess().getPatternPatParserRuleCall_1_0()); 
	    }
		lv_pattern_1_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatBorrowedRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_1_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatTuple
entryRulePatTuple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatTupleRule()); }
	 iv_rulePatTuple=rulePatTuple 
	 { $current=$iv_rulePatTuple.current; } 
	 EOF 
;

// Rule PatTuple
rulePatTuple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatTupleAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatTupleAccess().getPatternsPatParserRuleCall_1_0()); 
	    }
		lv_patterns_1_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatTupleRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_1_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatTupleAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatTupleAccess().getPatternsPatParserRuleCall_2_1_0()); 
	    }
		lv_patterns_3_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatTupleRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_3_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatTupleAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulePatVector
entryRulePatVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatVectorRule()); }
	 iv_rulePatVector=rulePatVector 
	 { $current=$iv_rulePatVector.current; } 
	 EOF 
;

// Rule PatVector
rulePatVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatVectorAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatVectorAccess().getPatternsPatParserRuleCall_1_0()); 
	    }
		lv_patterns_1_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatVectorRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_1_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatVectorAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatVectorAccess().getPatternsPatParserRuleCall_2_1_0()); 
	    }
		lv_patterns_3_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatVectorRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_3_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatVectorAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRulePatLiteral
entryRulePatLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatLiteralRule()); }
	 iv_rulePatLiteral=rulePatLiteral 
	 { $current=$iv_rulePatLiteral.current; } 
	 EOF 
;

// Rule PatLiteral
rulePatLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatLiteralAccess().getLiteralLiteralParserRuleCall_0()); 
	    }
		lv_literal_0_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatLiteralRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePatRange
entryRulePatRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatRangeRule()); }
	 iv_rulePatRange=rulePatRange 
	 { $current=$iv_rulePatRange.current; } 
	 EOF 
;

// Rule PatRange
rulePatRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPatRangeAccess().getPatCharRangeParserRuleCall_0()); 
    }
    this_PatCharRange_0=rulePatCharRange
    { 
        $current = $this_PatCharRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatRangeAccess().getPatNumberRangeParserRuleCall_1()); 
    }
    this_PatNumberRange_1=rulePatNumberRange
    { 
        $current = $this_PatNumberRange_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePatCharRange
entryRulePatCharRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatCharRangeRule()); }
	 iv_rulePatCharRange=rulePatCharRange 
	 { $current=$iv_rulePatCharRange.current; } 
	 EOF 
;

// Rule PatCharRange
rulePatCharRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatCharRangeAccess().getStartCharLitParserRuleCall_0_0()); 
	    }
		lv_start_0_0=ruleCharLit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatCharRangeRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_0_0, 
        		"CharLit");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='..' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPatCharRangeAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatCharRangeAccess().getEndCharLitParserRuleCall_2_0()); 
	    }
		lv_end_2_0=ruleCharLit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatCharRangeRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_2_0, 
        		"CharLit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatNumberRange
entryRulePatNumberRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatNumberRangeRule()); }
	 iv_rulePatNumberRange=rulePatNumberRange 
	 { $current=$iv_rulePatNumberRange.current; } 
	 EOF 
;

// Rule PatNumberRange
rulePatNumberRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatNumberRangeAccess().getStartNumberLitParserRuleCall_0_0()); 
	    }
		lv_start_0_0=ruleNumberLit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatNumberRangeRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_0_0, 
        		"NumberLit");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='..' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPatNumberRangeAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatNumberRangeAccess().getEndNumberLitParserRuleCall_2_0()); 
	    }
		lv_end_2_0=ruleNumberLit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatNumberRangeRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_2_0, 
        		"NumberLit");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatEnum
entryRulePatEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatEnumRule()); }
	 iv_rulePatEnum=rulePatEnum 
	 { $current=$iv_rulePatEnum.current; } 
	 EOF 
;

// Rule PatEnum
rulePatEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatEnumAccess().getPathPathParserRuleCall_0_0()); 
	    }
		lv_path_0_0=rulePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatEnumRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"Path");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPatEnumAccess().getPatTupleEnumPathAction_1_0_0(),
            $current);
    }
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatEnumAccess().getLeftParenthesisKeyword_1_0_1());
    }
(	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPatEnumAccess().getAsteriskKeyword_1_0_2_0());
    }

    |	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatEnumAccess().getFullStopFullStopKeyword_1_0_2_1());
    }

    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPatEnumAccess().getPatternsPatParserRuleCall_1_0_2_2_0_0()); 
	    }
		lv_patterns_5_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatEnumRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_5_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPatEnumAccess().getCommaKeyword_1_0_2_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatEnumAccess().getPatternsPatParserRuleCall_1_0_2_2_1_1_0()); 
	    }
		lv_patterns_7_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatEnumRule());
	        }
       		add(
       			$current, 
       			"patterns",
        		lv_patterns_7_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))*))	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPatEnumAccess().getRightParenthesisKeyword_1_0_3());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPatEnumAccess().getPatStructEnumPathAction_1_1_0(),
            $current);
    }
)	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPatEnumAccess().getLeftCurlyBracketKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatEnumAccess().getFieldPatternsFieldPatParserRuleCall_1_1_2_0()); 
	    }
		lv_fieldPatterns_11_0=ruleFieldPat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatEnumRule());
	        }
       		add(
       			$current, 
       			"fieldPatterns",
        		lv_fieldPatterns_11_0, 
        		"FieldPat");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPatEnumAccess().getCommaKeyword_1_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatEnumAccess().getFieldPatternsFieldPatParserRuleCall_1_1_3_1_0()); 
	    }
		lv_fieldPatterns_13_0=ruleFieldPat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatEnumRule());
	        }
       		add(
       			$current, 
       			"fieldPatterns",
        		lv_fieldPatterns_13_0, 
        		"FieldPat");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getPatEnumAccess().getRightCurlyBracketKeyword_1_1_4());
    }
)))
;





// Entry rule entryRuleFieldPat
entryRuleFieldPat returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldPatRule()); }
	 iv_ruleFieldPat=ruleFieldPat 
	 { $current=$iv_ruleFieldPat.current; } 
	 EOF 
;

// Rule FieldPat
ruleFieldPat returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getFieldPatAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldPatRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldPatAccess().getColonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldPatAccess().getPatternPatParserRuleCall_1_1_0()); 
	    }
		lv_pattern_2_0=rulePat		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldPatRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_2_0, 
        		"Pat");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePath
entryRulePath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current; } 
	 EOF 
;

// Rule Path
rulePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_segments_0_0=RULE_IDENT
		{
			newLeafNode(lv_segments_0_0, grammarAccess.getPathAccess().getSegmentsIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"segments",
        		lv_segments_0_0, 
        		"IDENT");
	    }

)
)(	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPathAccess().getColonColonKeyword_1_0());
    }
(
(
		lv_segments_2_0=RULE_IDENT
		{
			newLeafNode(lv_segments_2_0, grammarAccess.getPathAccess().getSegmentsIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"segments",
        		lv_segments_2_0, 
        		"IDENT");
	    }

)
))*(	otherlv_3='::' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPathAccess().getColonColonKeyword_2());
    }
)?(	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPathAccess().getLessThanSignKeyword_3_0());
    }
((
(
		lv_lifetimes_5_0=RULE_LIFETIME
		{
			newLeafNode(lv_lifetimes_5_0, grammarAccess.getPathAccess().getLifetimesLIFETIMETerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"lifetimes",
        		lv_lifetimes_5_0, 
        		"LIFETIME");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathAccess().getGenericTypesTypeParserRuleCall_3_1_1_0()); 
	    }
		lv_genericTypes_6_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathRule());
	        }
       		add(
       			$current, 
       			"genericTypes",
        		lv_genericTypes_6_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPathAccess().getCommaKeyword_3_2_0());
    }
((
(
		lv_lifetimes_8_0=RULE_LIFETIME
		{
			newLeafNode(lv_lifetimes_8_0, grammarAccess.getPathAccess().getLifetimesLIFETIMETerminalRuleCall_3_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"lifetimes",
        		lv_lifetimes_8_0, 
        		"LIFETIME");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathAccess().getGenericTypesTypeParserRuleCall_3_2_1_1_0()); 
	    }
		lv_genericTypes_9_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathRule());
	        }
       		add(
       			$current, 
       			"genericTypes",
        		lv_genericTypes_9_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)))*	otherlv_10='>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPathAccess().getGreaterThanSignKeyword_3_3());
    }
)?)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_0()); 
    }
    this_PrimitiveType_0=rulePrimitiveType
    { 
        $current = $this_PrimitiveType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getTupleTypeParserRuleCall_1()); 
    }
    this_TupleType_1=ruleTupleType
    { 
        $current = $this_TupleType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_2()); 
    }
    this_StructType_2=ruleStructType
    { 
        $current = $this_StructType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEnumTypeParserRuleCall_3()); 
    }
    this_EnumType_3=ruleEnumType
    { 
        $current = $this_EnumType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBoxedPointerParserRuleCall_4()); 
    }
    this_BoxedPointer_4=ruleBoxedPointer
    { 
        $current = $this_BoxedPointer_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getOwnedPointerParserRuleCall_5()); 
    }
    this_OwnedPointer_5=ruleOwnedPointer
    { 
        $current = $this_OwnedPointer_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBorrowedPointerParserRuleCall_6()); 
    }
    this_BorrowedPointer_6=ruleBorrowedPointer
    { 
        $current = $this_BorrowedPointer_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	 iv_rulePrimitiveType=rulePrimitiveType 
	 { $current=$iv_rulePrimitiveType.current; } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimitiveTypeAccess().getIntTypeAction_0_0(),
            $current);
    }
)this_INT_TYPE_1=RULE_INT_TYPE
    { 
    newLeafNode(this_INT_TYPE_1, grammarAccess.getPrimitiveTypeAccess().getINT_TYPETerminalRuleCall_0_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimitiveTypeAccess().getFloatTypeAction_1_0(),
            $current);
    }
)this_FLOAT_TYPE_3=RULE_FLOAT_TYPE
    { 
    newLeafNode(this_FLOAT_TYPE_3, grammarAccess.getPrimitiveTypeAccess().getFLOAT_TYPETerminalRuleCall_1_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimitiveTypeAccess().getBoolTypeAction_2_0(),
            $current);
    }
)this_BOOLEAN_TYPE_5=RULE_BOOLEAN_TYPE
    { 
    newLeafNode(this_BOOLEAN_TYPE_5, grammarAccess.getPrimitiveTypeAccess().getBOOLEAN_TYPETerminalRuleCall_2_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimitiveTypeAccess().getMachineTypeAction_3_0(),
            $current);
    }
)this_MACHINE_TYPE_7=RULE_MACHINE_TYPE
    { 
    newLeafNode(this_MACHINE_TYPE_7, grammarAccess.getPrimitiveTypeAccess().getMACHINE_TYPETerminalRuleCall_3_1()); 
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimitiveTypeAccess().getUnitTypeAction_4_0(),
            $current);
    }
)this_UNIT_TYPE_9=RULE_UNIT_TYPE
    { 
    newLeafNode(this_UNIT_TYPE_9, grammarAccess.getPrimitiveTypeAccess().getUNIT_TYPETerminalRuleCall_4_1()); 
    }
))
;





// Entry rule entryRuleTupleType
entryRuleTupleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleTypeRule()); }
	 iv_ruleTupleType=ruleTupleType 
	 { $current=$iv_ruleTupleType.current; } 
	 EOF 
;

// Rule TupleType
ruleTupleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTupleTypeAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_1_0()); 
	    }
		lv_types_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTupleTypeAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleTypeAccess().getTypesTypeParserRuleCall_2_1_0()); 
	    }
		lv_types_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleTypeRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTupleTypeAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	 iv_ruleStructType=ruleStructType 
	 { $current=$iv_ruleStructType.current; } 
	 EOF 
;

// Rule StructType
ruleStructType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructTypeAccess().getStructKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getStructTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStructTypeAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_4_0()); 
	    }
		lv_fields_8_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_8_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStructTypeAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getFieldsStructFieldParserRuleCall_5_1_0()); 
	    }
		lv_fields_10_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_10_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleBoxedPointer
entryRuleBoxedPointer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoxedPointerRule()); }
	 iv_ruleBoxedPointer=ruleBoxedPointer 
	 { $current=$iv_ruleBoxedPointer.current; } 
	 EOF 
;

// Rule BoxedPointer
ruleBoxedPointer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoxedPointerAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoxedPointerAccess().getTypeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoxedPointerRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOwnedPointer
entryRuleOwnedPointer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOwnedPointerRule()); }
	 iv_ruleOwnedPointer=ruleOwnedPointer 
	 { $current=$iv_ruleOwnedPointer.current; } 
	 EOF 
;

// Rule OwnedPointer
ruleOwnedPointer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOwnedPointerAccess().getTildeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOwnedPointerAccess().getTypeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOwnedPointerRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBorrowedPointer
entryRuleBorrowedPointer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorrowedPointerRule()); }
	 iv_ruleBorrowedPointer=ruleBorrowedPointer 
	 { $current=$iv_ruleBorrowedPointer.current; } 
	 EOF 
;

// Rule BorrowedPointer
ruleBorrowedPointer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBorrowedPointerAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorrowedPointerAccess().getTypeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorrowedPointerRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStructField
entryRuleStructField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructFieldRule()); }
	 iv_ruleStructField=ruleStructField 
	 { $current=$iv_ruleStructField.current; } 
	 EOF 
;

// Rule StructField
ruleStructField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStructFieldAccess().getVisVisibilityEnumRuleCall_0_0()); 
	    }
		lv_vis_0_0=ruleVisibility		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructFieldRule());
	        }
       		set(
       			$current, 
       			"vis",
        		lv_vis_0_0, 
        		"Visibility");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getStructFieldAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructFieldAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructFieldAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructFieldRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	 iv_ruleEnumType=ruleEnumType 
	 { $current=$iv_ruleEnumType.current; } 
	 EOF 
;

// Rule EnumType
ruleEnumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
    }
(
(
		lv_ident_1_0=RULE_IDENT
		{
			newLeafNode(lv_ident_1_0, grammarAccess.getEnumTypeAccess().getIdentIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_1_0, 
        		"IDENT");
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumTypeAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumTypeAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getParamsGenericParamDeclParserRuleCall_2_2_1_0()); 
	    }
		lv_params_5_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumTypeAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_4_0()); 
	    }
		lv_variants_8_0=ruleVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_8_0, 
        		"Variant");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumTypeAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getVariantsVariantParserRuleCall_5_1_0()); 
	    }
		lv_variants_10_0=ruleVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"variants",
        		lv_variants_10_0, 
        		"Variant");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleVariant
entryRuleVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariantRule()); }
	 iv_ruleVariant=ruleVariant 
	 { $current=$iv_ruleVariant.current; } 
	 EOF 
;

// Rule Variant
ruleVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariantAccess().getStructVariantParserRuleCall_0()); 
    }
    this_StructVariant_0=ruleStructVariant
    { 
        $current = $this_StructVariant_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariantAccess().getTupleVariantParserRuleCall_1()); 
    }
    this_TupleVariant_1=ruleTupleVariant
    { 
        $current = $this_TupleVariant_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariantAccess().getUnitVariantParserRuleCall_2()); 
    }
    this_UnitVariant_2=ruleUnitVariant
    { 
        $current = $this_UnitVariant_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStructVariant
entryRuleStructVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructVariantRule()); }
	 iv_ruleStructVariant=ruleStructVariant 
	 { $current=$iv_ruleStructVariant.current; } 
	 EOF 
;

// Rule StructVariant
ruleStructVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getStructVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructVariantAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_1_0()); 
	    }
		lv_params_2_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructVariantRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructVariantAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructVariantAccess().getParamsGenericParamDeclParserRuleCall_1_2_1_0()); 
	    }
		lv_params_4_0=ruleGenericParamDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructVariantRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"GenericParamDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructVariantAccess().getGreaterThanSignKeyword_1_3());
    }
)?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructVariantAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_3_0()); 
	    }
		lv_fields_7_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructVariantRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_7_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStructVariantAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructVariantAccess().getFieldsStructFieldParserRuleCall_4_1_0()); 
	    }
		lv_fields_9_0=ruleStructField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructVariantRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_9_0, 
        		"StructField");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStructVariantAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTupleVariant
entryRuleTupleVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleVariantRule()); }
	 iv_ruleTupleVariant=ruleTupleVariant 
	 { $current=$iv_ruleTupleVariant.current; } 
	 EOF 
;

// Rule TupleVariant
ruleTupleVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getTupleVariantAccess().getIdentIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTupleVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTupleVariantAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_2_0()); 
	    }
		lv_types_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleVariantRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTupleVariantAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTupleVariantAccess().getTypesTypeParserRuleCall_3_1_0()); 
	    }
		lv_types_4_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTupleVariantRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTupleVariantAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleUnitVariant
entryRuleUnitVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnitVariantRule()); }
	 iv_ruleUnitVariant=ruleUnitVariant 
	 { $current=$iv_ruleUnitVariant.current; } 
	 EOF 
;

// Rule UnitVariant
ruleUnitVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_ident_0_0=RULE_IDENT
		{
			newLeafNode(lv_ident_0_0, grammarAccess.getUnitVariantAccess().getIdentIDENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnitVariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ident",
        		lv_ident_0_0, 
        		"IDENT");
	    }

)
)
;





// Entry rule entryRuleStringLit
entryRuleStringLit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLitRule()); }
	 iv_ruleStringLit=ruleStringLit 
	 { $current=$iv_ruleStringLit.current; } 
	 EOF 
;

// Rule StringLit
ruleStringLit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING_LIT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLitAccess().getValueSTRING_LITTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING_LIT");
	    }

)
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNumberLitParserRuleCall_0()); 
    }
    this_NumberLit_0=ruleNumberLit
    { 
        $current = $this_NumberLit_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getCharLitParserRuleCall_1()); 
    }
    this_CharLit_1=ruleCharLit
    { 
        $current = $this_CharLit_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLitParserRuleCall_2()); 
    }
    this_StringLit_2=ruleStringLit
    { 
        $current = $this_StringLit_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNumberLit
entryRuleNumberLit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberLitRule()); }
	 iv_ruleNumberLit=ruleNumberLit 
	 { $current=$iv_ruleNumberLit.current; } 
	 EOF 
;

// Rule NumberLit
ruleNumberLit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=RULE_FLOAT_LIT
		{
			newLeafNode(lv_value_0_1, grammarAccess.getNumberLitAccess().getValueFLOAT_LITTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_1, 
        		"FLOAT_LIT");
	    }

    |		lv_value_0_2=RULE_INT_LIT
		{
			newLeafNode(lv_value_0_2, grammarAccess.getNumberLitAccess().getValueINT_LITTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberLitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_2, 
        		"INT_LIT");
	    }

)

)
)
;





// Entry rule entryRuleCharLit
entryRuleCharLit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharLitRule()); }
	 iv_ruleCharLit=ruleCharLit 
	 { $current=$iv_ruleCharLit.current; } 
	 EOF 
;

// Rule CharLit
ruleCharLit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_CHAR_LIT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getCharLitAccess().getValueCHAR_LITTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharLitRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"CHAR_LIT");
	    }

)
)
;





// Rule Visibility
ruleVisibility returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='priv' 
	{
        $current = grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='pub' 
	{
        $current = grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_1()); 
    }
));



RULE_LIFETIME : '\'' RULE_IDENT;

RULE_INT_TYPE : RULE_INT_SIZE;

fragment RULE_INT_SIZE : (RULE_SIGNED_INT_TYPE|RULE_UNSIGNED_INT_TYPE);

fragment RULE_SIGNED_INT_TYPE : (RULE_I8|RULE_I16|RULE_I32|RULE_I64);

fragment RULE_I8 : 'i8';

fragment RULE_I16 : 'i16';

fragment RULE_I32 : 'i32';

fragment RULE_I64 : 'i64';

fragment RULE_UNSIGNED_INT_TYPE : (RULE_U8|RULE_U16|RULE_U32|RULE_U64);

fragment RULE_U8 : 'u8';

fragment RULE_U16 : 'u16';

fragment RULE_U32 : 'u32';

fragment RULE_U64 : 'u64';

RULE_FLOAT_TYPE : RULE_FLOAT_SIZE;

fragment RULE_FLOAT_SIZE : (RULE_F32|RULE_F64);

fragment RULE_F32 : 'f32';

fragment RULE_F64 : 'f64';

RULE_BOOLEAN_TYPE : 'bool';

RULE_MACHINE_TYPE : (RULE_MACHINE_INT_TYPE|RULE_MACHINE_UINT_TYPE);

fragment RULE_MACHINE_INT_TYPE : 'int';

fragment RULE_MACHINE_UINT_TYPE : 'uint';

RULE_UNIT_TYPE : '()';

RULE_MUT_KEYWORD : 'mut';

RULE_CHAR_LIT : '\'' ('\\' ('\\'|'n'|'r'|'t'|'0')|RULE_UNICODE_CHAR|~(('\\'|'\'')))* '\'';

RULE_STRING_LIT : '"' ('\\' ('\\'|'n'|'r'|'t'|'0')|RULE_UNICODE_CHAR|~(('\\'|'"')))* '"';

fragment RULE_UNICODE_CHAR : (RULE_UTF8_CHAR|RULE_UTF16_CHAR|RULE_UTF32_CHAR);

fragment RULE_UTF8_CHAR : '\\x' RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_UTF16_CHAR : '\\u' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

fragment RULE_UTF32_CHAR : '\\U' RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT RULE_HEX_DIGIT;

RULE_FLOAT_LIT : RULE_DEC_DIGIT (RULE_DEC_DIGIT|'_')* '.' (RULE_DEC_DIGIT|'_')+ (('E'|'e') ('+'|'-')? (RULE_DEC_DIGIT|'_')+)? RULE_FLOAT_SIZE?;

RULE_INT_LIT : (RULE_DEC_INT_LIT|RULE_BIN_INT_LIT|RULE_OCT_INT_LIT|RULE_HEX_INT_LIT) RULE_INT_SIZE?;

fragment RULE_DEC_INT_LIT : RULE_DEC_DIGIT (RULE_DEC_DIGIT|'_')*;

fragment RULE_BIN_INT_LIT : '0b' ('0'|'1'|'_')+;

fragment RULE_OCT_INT_LIT : '0o' (RULE_OCT_DIGIT|'_')+;

fragment RULE_HEX_INT_LIT : '0x' (RULE_HEX_DIGIT|'_')+;

fragment RULE_OCT_DIGIT : '0'..'7';

fragment RULE_DEC_DIGIT : '0'..'9';

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_XID_START : 'a'..'z';

fragment RULE_XID_CONTINUE : ('a'..'z'|'_');

RULE_IDENT : RULE_XID_START RULE_XID_CONTINUE*;


